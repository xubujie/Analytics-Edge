train <- read.csv(file = "../data/data_train.csv")
test <- read.csv(file = "../data/data_test.csv")
head(train)
train <- read.csv(file = "../data/data_train.csv",quote = ",")
head(train)
train <- read.csv(file = "../data/data_train.csv",sep = ";")
head(train)
test <- read.csv(file = "../data/data_test.csv",sep = ";")
nrow(test
)
nrow(test)
head(test)
speed_test <- test %>% filter(Speed = NA)
library(dplyr)
speed_test <- test %>% filter(Speed = NA)
speed_test <- test %>% filter(Speed == NA)
speed_test <- test %>% select(Speed == NA)
speed_test <- test %>% select(Speed = NA)
head(test)
speed_test <- test %>% select(Speed == NA)
is.null(NA)
NA == NA
NA
is.na(NA)
speed_test <- test %>% select(is.na(Speed))
setwd("Desktop/Analytics Edge/Unit 2 Linear Regression/data/")
setwd("../Unit 2 Linear Regression/data/")
setwd("~/github/Analytics Edge/Unit 2 Linear Regression/data/")
getwd()
setwd("~")
setwd("~/github/Analytics-Edge/Unit 2 Linear Regression/data/")
wine = read.csv("wine.csv")
model = lm(Price~HarvestRain+WinterRain,data=wine)
summary(model)
cor(wine$HarvestRain,wine$WinterRain)
setwd("~/github/Analytics-Edge/Unit2 Linear Regression/data/")
setwd("~/github/Analytics-Edge/Unit 2 Linear Regression/data/")
climate = read.csv("climate_change.csv")
climate_train = subset(climate, Year<=2006)
climate_test = subset(climate, Year>2006)
TempReg = lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI + Aerosols, data = climate_train)
summary(TempReg)
SSE = sum(TempReg$residuals^2)
RMSE = sqrt(SSE/nrow(climate_train))
SSE_test = sum((predict(TempReg, newdata=climate_test) - climate_test$Temp)^2)
cor(climate_train)
TempReg2 = lm(Temp ~ MEI + TSI + Aerosols + N2O, data=climate_train)
TempReg3 = step(TempReg)
SSE_test = sum((predict(TempReg3, newdata=climate_test) - climate_test$Temp)^2)
SST_test = sum((mean(climate_train$Temp) - climate_test$Temp)^2)
R_2 = 1 - SSE_test/SST_test
head(climate_train)
setwd("~/github/Analytics-Edge/Unit 2 Linear Regression/data/")
pisaTrain = read.csv("pisa2009train.csv")
pisaTest = read.csv("pisa2009test.csv")
tapply(pisaTrain$readingScore, pisaTrain$male, mean)
head(pisaTrain)
pisaTrain$raceeth
